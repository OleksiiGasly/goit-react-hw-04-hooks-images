{"version":3,"sources":["utils/api.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["axios","defaults","baseURL","params","key","image_type","orientation","safesearch","per_page","fetchImages","imageTags","page","a","get","response","data","hits","Searchbar","onSearch","className","onSubmit","e","preventDefault","target","elements","value","reset","type","name","autoComplete","autoFocus","placeholder","ImageGalleryItem","webformatURL","largeImageURL","tags","handleSelectedImage","src","alt","onClick","ImageGallery","gallery","map","id","Button","handleLoadMore","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeydown","removeEventListener","code","createPortal","currentTarget","App","useState","setImageTags","setPage","setGallery","requestStatus","setRequestStatus","showModal","setShowModal","setLargeImageURL","setTags","toggleModal","handleScroll","scrollTo","top","documentElement","scrollHeight","behavior","galleryList","prevState","length","toast","console","log","getGallery","isLoading","showGallery","color","height","width","style","marginLeft","marginTop","marginBottom","timeout","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b95097d5.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '22610710-77f064d5489dfe1781c9024b3';\nconst BASE_URL = 'https://pixabay.com/api/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  key: API_KEY,\n  image_type: 'photo',\n  orientation: 'horizontal',\n  safesearch: 'true',\n  per_page: 12,\n};\n\nconst fetchImages = async (imageTags, page) => {\n  const response = await axios.get(`?q=${imageTags}&page=${page}`);\n  return response.data.hits;\n};\n\nexport default fetchImages;\n","import PropTypes from 'prop-types';\nimport './Searchbar.css';\n\nconst Searchbar = ({ onSearch }) => {\n  const onSearchBtnClick = e => {\n    e.preventDefault();\n    onSearch(e.target.elements.imageTags.value);\n    e.target.reset();\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={onSearchBtnClick}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          name=\"imageTags\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import './ImageGalleryItem.css';\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({\n  webformatURL,\n  largeImageURL,\n  imageTags,\n  tags,\n  handleSelectedImage,\n}) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt={tags}\n        className=\"ImageGalleryItem-image\"\n        onClick={() => handleSelectedImage(largeImageURL, imageTags)}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  imageTags: PropTypes.string,\n  tags: PropTypes.string,\n  handleSelectedImage: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport './ImageGallery.css';\n\nconst ImageGallery = ({ gallery, handleSelectedImage }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {gallery.map(({ id, largeImageURL, webformatURL }) => (\n        <ImageGalleryItem\n          key={id}\n          largeImageURL={largeImageURL}\n          webformatURL={webformatURL}\n          handleSelectedImage={handleSelectedImage}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  gallery: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleSelectedImage: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport './Button.css';\n\nconst Button = ({ handleLoadMore }) => {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={handleLoadMore}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  handleLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport './Modal.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, largeImageURL, tags, children }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeydown);\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  });\n\n  const handleKeydown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        {children}\n        <img src={largeImageURL} alt={tags} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n};\n\nexport default Modal;\n","import { useState, useEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport fetchImages from './utils/api';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport './App.css';\n\nconst App = () => {\n  const [imageTags, setImageTags] = useState('');\n  const [page, setPage] = useState(1);\n  const [gallery, setGallery] = useState([]);\n  const [requestStatus, setRequestStatus] = useState('idle');\n  const [showModal, setShowModal] = useState(false);\n  const [largeImageURL, setLargeImageURL] = useState('');\n  const [tags, setTags] = useState('');\n\n  const handleFormSubmit = imageTags => {\n    setPage(1);\n    setGallery([]);\n    setImageTags(imageTags);\n  };\n\n  const handleLoadMore = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const handleSelectedImage = (largeImageURL, imageTags) => {\n    setLargeImageURL(largeImageURL);\n    setTags(tags);\n    toggleModal();\n  };\n\n  const handleScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  useEffect(() => {\n    async function getGallery() {\n      try {\n        if (imageTags === '') return;\n        setRequestStatus('pending');\n        const galleryList = await fetchImages(imageTags, page);\n        setGallery(prevState => [...prevState, ...galleryList]);\n        setRequestStatus('resolved');\n        handleScroll();\n        if (galleryList.length === 0) {\n          return toast(\n            'Sorry, there are no images matching your search query. Please try again.',\n          );\n        }\n      } catch (error) {\n        setRequestStatus('rejected');\n        console.log(error);\n      }\n    }\n    getGallery();\n  }, [imageTags, page]);\n\n  const isLoading = requestStatus === 'pending';\n  const showGallery = gallery.length > 0 && !isLoading;\n\n  return (\n    <div>\n      {showModal && (\n        <Modal onClose={toggleModal} largeImageURL={largeImageURL} alt={tags} />\n      )}\n      <Searchbar onSearch={handleFormSubmit} />\n      {isLoading && (\n        <Loader\n          type=\"Puff\"\n          color=\"#eb8634\"\n          height={84}\n          width={84}\n          style={{\n            marginLeft: '666px',\n            marginTop: '20px',\n            marginBottom: '20px',\n          }}\n          timeout={2000}\n        />\n      )}\n      <ImageGallery\n        gallery={gallery}\n        handleSelectedImage={handleSelectedImage}\n      />\n      {showGallery && <Button handleLoadMore={handleLoadMore} />}\n      <Toaster position=\"top-right\" />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}